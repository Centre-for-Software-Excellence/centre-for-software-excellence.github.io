name: Cleanup Old Deployments

on:
  schedule:
    - cron: '0 2 * * 0'

  workflow_dispatch:

permissions:
  deployments: write
  contents: read

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup old deployments
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployments } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: 'github-pages',
              per_page: 100
            });

            console.log(`Found ${deployments.length} deployments`);

            // keep only 10
            const deploymentsToDelete = deployments.slice(10);

            if (deploymentsToDelete.length === 0) {
              console.log('No deployments to delete');
              return;
            }

            console.log(`Will delete ${deploymentsToDelete.length} old deployments`);

            for (const deployment of deploymentsToDelete) {
              try {
                // get statuses for the deployment
                const { data: statuses } = await github.rest.repos.listDeploymentStatuses({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id
                });
                
                // set all statuses to inactive before deleting
                for (const status of statuses) {
                  if (status.state === 'success' || status.state === 'active') {
                    await github.rest.repos.createDeploymentStatus({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      deployment_id: deployment.id,
                      state: 'inactive'
                    });
                  }
                }
                
                // delete the deployment
                await github.rest.repos.deleteDeployment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id
                });
                
                console.log(`Deleted deployment ${deployment.id}`);
              } catch (error) {
                console.log(`Failed to delete deployment ${deployment.id}: ${error.message}`);
              }
            }
